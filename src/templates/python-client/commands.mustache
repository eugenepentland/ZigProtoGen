import struct

def generate_crc16_append(data: bytes) -> bytes:
    crc = 0xFFFF
    for byte in data:
        crc ^= byte
        for _ in range(8):
            crc = (crc >> 1) ^ (0xA001 if crc & 0x0001 else 0)
    
    crc_low = crc & 0xFF
    crc_high = (crc >> 8) & 0xFF
    return data + bytes([crc_high, crc_low])

{{#commands}}
def {{name}}({{>args.mustache}}):
  address, function_id = 0, {{id}}
  data = struct.pack('BB{{>arg_type.mustache}}', address, function_id, {{>args.mustache}})
  return generate_crc16_append(data)

{{/commands}}